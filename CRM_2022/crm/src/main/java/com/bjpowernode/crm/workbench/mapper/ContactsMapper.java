package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Contacts;
import com.bjpowernode.crm.workbench.domain.Tran;

import java.util.List;
import java.util.Map;

public interface ContactsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Sat Jun 11 21:26:09 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Sat Jun 11 21:26:09 CST 2022
     */
    int insert(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Sat Jun 11 21:26:09 CST 2022
     */
    int insertSelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Sat Jun 11 21:26:09 CST 2022
     */
    Contacts selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Sat Jun 11 21:26:09 CST 2022
     */
    int updateByPrimaryKeySelective(Contacts record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_contacts
     *
     * @mbggenerated Sat Jun 11 21:26:09 CST 2022
     */
    int updateByPrimaryKey(Contacts record);

    /**
     * 保存创建的联系人
     * @param contacts
     * @return
     */
    int insertContacts(Contacts contacts);

    /**
     * 根据条件分页查询联系人信息
     * @param map
     * @return
     */
    List<Contacts> selectContactsByConditionForPage(Map<String, Object> map);

    /**
     * 根据条件查询联系人总记录条数
     * @return
     */
    int selectCountOfContactsByCondition(Map<String, Object> map);

    /**
     * 根据数组ids批量删除联系人
     * @param id
     * @return
     */
    int deleteContactsByIds(String[] id);

    /**
     * 根据id查询联系人信息
     * @param id
     * @return
     */
    Contacts selectContactsById(String id);

    /**
     * 保存修改的联系人信息
     * @param contacts
     * @return
     */
    int updateContacts(Contacts contacts);

    /**
     * 根据id查询联系人详情
     * @param id
     * @return
     */
    Contacts selectContactsForDetailById(String id);

    /**
     * 根据联系人姓名模糊查询联系人
     * @param contactsName
     * @return
     */
    List<Contacts> selectContactsForDetailByContactsName(String contactsName);



}